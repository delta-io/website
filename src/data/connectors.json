[
  {
    "name": "Apache Flink",
    "description": "This connector allows Apache Flink to write to Delta Lake.",
    "url": "https://github.com/delta-io/connectors/tree/master/flink/",
    "docs": "https://github.com/delta-io/connectors/tree/master/flink",
    "source_code": "https://github.com/delta-io/connectors/tree/master/flink",
    "tags": ["Flink", "standalone"],
    "thumbnail": "./images/connectors/apache-flink-logo.png"
  },
  {
    "name": "Apache Hive",
    "description": "This connector allows Apache Hive to read from Delta Lake.",
    "url": "https://github.com/delta-io/connectors",
    "docs": "https://docs.delta.io/latest/hive-integration.html",
    "source_code": "https://github.com/delta-io/connectors/tree/master/hive/src/main",
    "tags": ["Hive", "standalone"],
    "thumbnail": "./images/connectors/hive.png"
  },
  {
    "name": "Apache Spark™",
    "description": "This connector allows Apache Spark™ to read from and write to Delta Lake.",
    "url": "https://docs.delta.io",
    "docs": "https://docs.delta.io",
    "source_code": "https://github.com/delta-io/delta/",
    "tags": ["Spark"],
    "thumbnail": "./images/connectors/apache-spark-icon.png"
  },
  {
    "name": "Delta Rust API ",
    "description": "This library allows Rust (with Python and Ruby bindings) low level access to Delta tables and is intended to be used with data processing frameworks like datafusion, ballista, rust-dataframe, vega, etc.",
    "url": "https://github.com/delta-io/delta-rs",
    "docs": "https://docs.rs/deltalake/latest/deltalake/",
    "source_code": "https://github.com/delta-io/delta-rs/tree/main/rust",
    "tags": ["Rust", "Python", "Ruby"],
    "thumbnail": "./images/connectors/rust.png"
  },
  {
    "name": "Delta Standalone",
    "description": "This library allows Scala and Java-based projects (including Apache Flink, Apache Hive, Apache Beam, and PrestoDB) to read from and write to Delta Lake.",
    "url": "https://github.com/delta-io/connectors",
    "docs": "https://docs.delta.io/latest/delta-standalone.html",
    "source_code": "https://github.com/delta-io/connectors/tree/master/standalone/src",
    "tags": ["Scala", "Java", "standalone"],
    "thumbnail": "./images/connectors/delta-standalone.png"
  },
  {
    "name": "Kafka Delta Ingest",
    "description": "This project builds a highly efficient daemon for streaming data through Apache Kafka into Delta Lake.",
    "url": "https://github.com/delta-io/kafka-delta-ingest",
    "docs": "https://github.com/delta-io/kafka-delta-ingest/blob/main/doc/DESIGN.md",
    "source_code": "https://github.com/delta-io/kafka-delta-ingest/",
    "tags": ["Kafka", "Rust"],
    "thumbnail": "./images/connectors/kafka.png"
  },
  {
    "name": "PrestoDB",
    "description": "This connector allows PrestoDB to read from Delta Lake.",
    "url": "https://prestodb.io/docs/current/connector/deltalake.html",
    "docs": "https://prestodb.io/docs/current/connector/deltalake.html",
    "source_code": "https://github.com/prestodb/presto/tree/master/presto-delta",
    "tags": ["PrestoDB", "standalone"],
    "thumbnail": "./images/connectors/prestodb-logo.png"
  },
  {
    "name": "Apache Pulsar",
    "description": "This connector allows Apache Pulsar to read from and write to Delta Lake.",
    "url": "https://streamnative.io/blog/release/2022-08-17-announcing-the-delta-lake-sink-connector-for-apache-pulsar/",
    "docs": "https://github.com/streamnative/pulsar-io-lakehouse/blob/master/docs/delta-lake-demo.md",
    "source_code": "https://github.com/streamnative/pulsar-io-lakehouse",
    "tags": ["Pulsar", "community"],
    "thumbnail": "./images/connectors/wFcLUbwd_400x400.jpg"
  },
  {
    "name": "SQL Delta Import",
    "description": "This utility is for importing data from a JDBC source into a Delta Lake table.",
    "url": "https://github.com/delta-io/connectors/blob/master/sql-delta-import/readme.md",
    "docs": "https://github.com/delta-io/connectors/blob/master/sql-delta-import/readme.md",
    "source_code": "https://github.com/delta-io/connectors/tree/master/sql-delta-import/src",
    "tags": ["SQL", "JDBC"],
    "thumbnail": "./images/connectors/sql.png"
  },
  {
    "name": "Trino",
    "description": "This connector allows Trino to read from and write to Delta Lake.",
    "url": "https://trino.io/docs/current/connector/delta-lake.html",
    "docs": "https://trino.io/docs/current/connector/delta-lake.html",
    "source_code": "https://github.com/trinodb/trino/tree/master/plugin/trino-delta-lake",
    "tags": ["Trino"],
    "thumbnail": "./images/connectors/trino-logo.png"
  },
  {
    "name": "FINOS Legend",
    "description": "An extension to the FINOS Legend framework for Apache Spark™ / Delta Lake based environment, combining best of open data standards with open source technologiesThis connector allows Trino to read from and write to Delta Lake.",
    "url": "https://legend.finos.org/docs/community/external-integrations",
    "docs": "https://github.com/finos/legend-community-delta/blob/main/README.md",
    "source_code": "https://github.com/finos/legend-community-delta",
    "tags": ["FINOS", "Legend"],
    "thumbnail": "./images/connectors/229239046-365bc3c4-f644-4fd2-b73f-7efb27366656.png"
  }
]
